"use strict";(self.webpackChunkreact_native_reanimated_docs=self.webpackChunkreact_native_reanimated_docs||[]).push([[4609],{44058:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>D,contentTitle:()=>_,default:()=>j,frontMatter:()=>T,metadata:()=>A,toc:()=>I});var a=n(83117),o=n(67294),r=n(3905),i=n(67177),l=n(72862),s=n(10758),p=n(35842),d=n(74306),u=n(347),c=n(6328),m=n(49638);const f={code:"function anonymous(){const{interpolate,offset}=this.__closure;return{opacity:interpolate(offset.value,[-200,200],[1,0]),transform:[{translateX:offset.value}]};}"};function h(){const e=(0,s.y)(200),t=(0,p.l)(function(){const t=()=>({opacity:(0,d.sX)(e.value,[-200,200],[1,0]),transform:[{translateX:e.value}]});return t.__closure={interpolate:d.sX,offset:e},t.__initData=f,t.__workletHash=8810153802155,t}());return o.useEffect((()=>{e.value=(0,u.D)((0,c.j)(-e.value,{duration:1500}),-1,!0)}),[]),o.createElement(i.Z,{style:g.container},o.createElement(m.n,{style:[g.box,t]}))}const g=l.Z.create({container:{flex:1,alignItems:"center",justifyContent:"center",height:"100%"},box:{height:120,width:120,backgroundColor:"#b58df1",borderRadius:20}}),x="import React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport Animated, {\n  useSharedValue,\n  useAnimatedStyle,\n  withTiming,\n  withRepeat,\n  interpolate,\n} from 'react-native-reanimated';\n\nexport default function App() {\n  const offset = useSharedValue(200);\n\n  const animatedStyles = useAnimatedStyle(() => ({\n    // highlight-next-line\n    opacity: interpolate(offset.value, [-200, 200], [1, 0]),\n    transform: [{ translateX: offset.value }],\n  }));\n\n  React.useEffect(() => {\n    offset.value = withRepeat(\n      withTiming(-offset.value, { duration: 1500 }),\n      -1,\n      true\n    );\n  }, []);\n\n  return (\n    <View style={styles.container}>\n      <Animated.View style={[styles.box, animatedStyles]} />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '100%',\n  },\n  box: {\n    height: 120,\n    width: 120,\n    backgroundColor: '#b58df1',\n    borderRadius: 20,\n  },\n});\n";var v=n(44996),y=n(3804),S=n(24404);function k(){const e=(0,s.y)(0);return o.createElement(y.cS,{style:E.container},o.createElement(i.Z,{style:E.wrapper},o.createElement(w,{offset:e,extrapolation:d.z2.EXTEND}),o.createElement(w,{offset:e,extrapolation:d.z2.CLAMP}),o.createElement(w,{offset:e,extrapolation:d.z2.IDENTITY})))}const b={code:"function anonymous(event){const{offset}=this.__closure;offset.value=event.translationX;}"},R={code:"function anonymous(){const{offset,withTiming}=this.__closure;offset.value=withTiming(0);}"},C={code:"function anonymous(){const{offset,interpolate,extrapolation}=this.__closure;return{transform:[{translateX:offset.value},{rotate:interpolate(offset.value,[-100,0,100],[-360,0,360],extrapolation)+'deg'}]};}"};function w(e){let{offset:t,extrapolation:n}=e;const a=y.oF.Pan().onChange(function(){const e=function(e){t.value=e.translationX};return e.__closure={offset:t},e.__initData=b,e.__workletHash=5437248460915,e}()).onFinalize(function(){const e=function(){t.value=(0,c.j)(0)};return e.__closure={offset:t,withTiming:c.j},e.__initData=R,e.__workletHash=4770049740371,e}()),r=(0,p.l)(function(){const e=()=>({transform:[{translateX:t.value},{rotate:(0,d.sX)(t.value,[-100,0,100],[-360,0,360],n)+"deg"}]});return e.__closure={offset:t,interpolate:d.sX,extrapolation:n},e.__initData=C,e.__workletHash=6175869681676,e}());return o.createElement(y.Le,{gesture:a},o.createElement(m.n,{style:[E.box,r]},o.createElement(S.Z,{style:E.text},n.toUpperCase())))}const E=l.Z.create({container:{flex:1,alignItems:"center",justifyContent:"center",height:"100%"},wrapper:{flex:1,alignItems:"center",justifyContent:"center",height:"100%",width:200,borderLeftColor:"#b58df1",borderLeftWidth:1,borderRightColor:"#b58df1",borderRightWidth:1,borderStyle:"dashed"},box:{height:80,width:80,margin:20,borderWidth:1,borderColor:"#b58df1",borderRadius:20,alignItems:"center",justifyContent:"center",cursor:"grab"},text:{color:"#b58df1",textTransform:"uppercase",fontWeight:"bold"}}),N="import 'react-native-gesture-handler';\nimport React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport Animated, {\n  useAnimatedStyle,\n  useSharedValue,\n  withTiming,\n  interpolate,\n  Extrapolation,\n  SharedValue,\n} from 'react-native-reanimated';\nimport {\n  Gesture,\n  GestureDetector,\n  GestureHandlerRootView,\n} from 'react-native-gesture-handler';\n\nexport default function App() {\n  const offset = useSharedValue(0);\n\n  return (\n    <GestureHandlerRootView style={styles.container}>\n      <View style={styles.wrapper}>\n        <Box offset={offset} extrapolation={Extrapolation.EXTEND} />\n        <Box offset={offset} extrapolation={Extrapolation.CLAMP} />\n        <Box offset={offset} extrapolation={Extrapolation.IDENTITY} />\n      </View>\n    </GestureHandlerRootView>\n  );\n}\n\ninterface BoxProps {\n  offset: SharedValue<number>;\n  extrapolation: Extrapolation;\n}\n\nfunction Box({ offset, extrapolation }: BoxProps) {\n  const pan = Gesture.Pan()\n    .onChange((event) => {\n      offset.value = event.translationX;\n    })\n    .onFinalize(() => {\n      offset.value = withTiming(0);\n    });\n\n  const animatedStyles = useAnimatedStyle(() => ({\n    transform: [\n      { translateX: offset.value },\n      {\n        // highlight-start\n        rotate:\n          interpolate(\n            offset.value,\n            [-100, 0, 100],\n            [-360, 0, 360],\n            extrapolation\n          ) + 'deg',\n        // highlight-end\n      },\n    ],\n  }));\n\n  return (\n    <GestureDetector gesture={pan}>\n      <Animated.View style={[styles.box, animatedStyles]}>\n        <Text style={styles.text}>{extrapolation.toUpperCase()}</Text>\n      </Animated.View>\n    </GestureDetector>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '100%',\n  },\n  wrapper: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '100%',\n    width: 200,\n    borderLeftColor: '#b58df1',\n    borderLeftWidth: 1,\n    borderRightColor: '#b58df1',\n    borderRightWidth: 1,\n    borderStyle: 'dashed',\n  },\n  box: {\n    height: 80,\n    width: 80,\n    margin: 20,\n    borderWidth: 1,\n    borderColor: '#b58df1',\n    borderRadius: 20,\n    alignItems: 'center',\n    justifyContent: 'center',\n    cursor: 'grab',\n  },\n  text: {\n    color: '#b58df1',\n    textTransform: 'uppercase',\n    fontWeight: 'bold',\n  },\n});\n",T={sidebar_position:1},_="interpolate",A={unversionedId:"utilities/interpolate",id:"utilities/interpolate",title:"interpolate",description:"interpolate lets you map a value from one range to another using linear interpolation.",source:"@site/docs/utilities/interpolate.mdx",sourceDirName:"utilities",slug:"/utilities/interpolate",permalink:"/react-native-reanimated/docs/utilities/interpolate",draft:!1,editUrl:"https://github.com/software-mansion/react-native-reanimated/tree/main/docs/docs/utilities/interpolate.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Utilities",permalink:"/react-native-reanimated/docs/category/utilities"},next:{title:"clamp",permalink:"/react-native-reanimated/docs/utilities/clamp"}},D={},I=[{value:"Reference",id:"reference",level:2},{value:"Arguments",id:"arguments",level:3},{value:"<code>value</code>",id:"value",level:4},{value:"<code>input</code>",id:"input",level:4},{value:"<code>output</code>",id:"output",level:4},{value:"<code>extrapolate</code> <Optional/>",id:"extrapolate-",level:4},{value:"Returns",id:"returns",level:3},{value:"Example",id:"example",level:2},{value:"Platform compatibility",id:"platform-compatibility",level:2}],L=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.kt)("div",t)},M=L("InteractiveExample"),X=L("Optional"),Z={toc:I},P="wrapper";function j(e){let{components:t,...n}=e;return(0,r.kt)(P,(0,a.Z)({},Z,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"interpolate"},"interpolate"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"interpolate")," lets you map a value from one range to another using linear interpolation."),(0,r.kt)(M,{src:x,component:(0,r.kt)(h,{mdxType:"Interpolate"}),mdxType:"InteractiveExample"}),(0,r.kt)("h2",{id:"reference"},"Reference"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"import { interpolate } from 'react-native-reanimated';\n\nfunction App() {\n  const animatedStyle = useAnimatedStyle(() => ({\n    // highlight-next-line\n    opacity: interpolate(sv.value, [0, 100], [0, 1], Extrapolation.CLAMP),\n  }));\n}\n")),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Type definitions"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"enum Extrapolation {\n  IDENTITY = 'identity',\n  CLAMP = 'clamp',\n  EXTEND = 'extend',\n}\n\ntype ExtrapolationAsString = 'identity' | 'clamp' | 'extend';\n\nexport type ExtrapolationType =\n  | ExtrapolationConfig\n  | Extrapolation\n  | ExtrapolationAsString\n  | undefined;\n\nfunction interpolate(\n  value: number,\n  input: readonly number[],\n  output: readonly number[],\n  extrapolate?: ExtrapolationType\n): number;\n"))),(0,r.kt)("h3",{id:"arguments"},"Arguments"),(0,r.kt)("h4",{id:"value"},(0,r.kt)("inlineCode",{parentName:"h4"},"value")),(0,r.kt)("p",null,"A number from the ",(0,r.kt)("inlineCode",{parentName:"p"},"input")," range that is going to be mapped to the ",(0,r.kt)("inlineCode",{parentName:"p"},"output")," range."),(0,r.kt)("h4",{id:"input"},(0,r.kt)("inlineCode",{parentName:"h4"},"input")),(0,r.kt)("p",null,"An array of numbers specifying the input range of the interpolation."),(0,r.kt)("h4",{id:"output"},(0,r.kt)("inlineCode",{parentName:"h4"},"output")),(0,r.kt)("p",null,"An array of numbers specifying the output range of the interpolation. It should have at least the same number of points as the input range."),(0,r.kt)("h4",{id:"extrapolate-"},(0,r.kt)("inlineCode",{parentName:"h4"},"extrapolate")," ",(0,r.kt)(X,{mdxType:"Optional"})),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"extrapolate")," parameter determines what happens when the ",(0,r.kt)("inlineCode",{parentName:"p"},"value")," goes beyond the ",(0,r.kt)("inlineCode",{parentName:"p"},"input")," range. Defaults to ",(0,r.kt)("inlineCode",{parentName:"p"},"Extrapolation.EXTEND"),"."),(0,r.kt)("p",null,"Available types:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Extrapolation.EXTEND")," - predicts the values beyond the output range."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Extrapolation.CLAMP")," - clamps the value to the edge of the output range."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Extrapolation.IDENTITY")," - returns the provided value as is.")),(0,r.kt)("div",{style:{display:"flex",justifyContent:"center",textAlign:"center"}},(0,r.kt)("div",{style:{maxWidth:320}},(0,r.kt)("img",{src:(0,v.Z)("/img/extrapolation/extend.png")}),(0,r.kt)("p",null,"EXTEND")),(0,r.kt)("div",{style:{maxWidth:320}},(0,r.kt)("img",{src:(0,v.Z)("/img/extrapolation/clamp.png")}),(0,r.kt)("p",null,"CLAMP")),(0,r.kt)("div",{style:{maxWidth:320}},(0,r.kt)("img",{src:(0,v.Z)("/img/extrapolation/identity.png")}),(0,r.kt)("p",null,"IDENTITY"))),(0,r.kt)("p",null,"This parameter also accepts string values:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},'"extend"')),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},'"clamp"')),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},'"identity"'))),(0,r.kt)("p",null,"By default, the ",(0,r.kt)("inlineCode",{parentName:"p"},"extrapolate")," parameter applies the value passed to both edges of the range. To specify extrapolation to a particular edge, you can pass an object:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"const opacity = interpolate(\n  sv.value,\n  [0, 100],\n  [0, 1],\n  // highlight-next-line\n  { extrapolateLeft: Extrapolation.CLAMP }\n);\n")),(0,r.kt)("h3",{id:"returns"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"interpolate")," returns a mapped value within the output range."),(0,r.kt)("h2",{id:"example"},"Example"),(0,r.kt)(M,{src:N,component:(0,r.kt)(k,{mdxType:"InterpolateRotation"}),label:"Grab and drag any of the squares. The dashed lines indicate the range of the interpolation.",mdxType:"InteractiveExample"}),(0,r.kt)("h2",{id:"platform-compatibility"},"Platform compatibility"),(0,r.kt)("div",{className:"platform-compatibility"},(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Android"),(0,r.kt)("th",{parentName:"tr",align:null},"iOS"),(0,r.kt)("th",{parentName:"tr",align:null},"Web"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"\u2705"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2705"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2705"))))))}j.isMDXComponent=!0},24404:(e,t,n)=>{n.d(t,{Z:()=>k});var a=n(3058),o=n(80102),r=n(67294),i=n(37353),l=n(13250),s=n(45819),p=n(30042),d=n(16528),u=n(60091),c=n(72359),m=n(72862),f=n(84370),h=n(72931),g=["hrefAttrs","numberOfLines","onClick","onLayout","onPress","onMoveShouldSetResponder","onMoveShouldSetResponderCapture","onResponderEnd","onResponderGrant","onResponderMove","onResponderReject","onResponderRelease","onResponderStart","onResponderTerminate","onResponderTerminationRequest","onScrollShouldSetResponder","onScrollShouldSetResponderCapture","onSelectionChangeShouldSetResponder","onSelectionChangeShouldSetResponderCapture","onStartShouldSetResponder","onStartShouldSetResponderCapture","selectable"],x=Object.assign({},l.lG,l.LO,l._T,l.YB,l.Uy,l.hJ,l.E5,l.vr,{href:!0,lang:!0,pointerEvents:!0}),v=r.forwardRef(((e,t)=>{var n=e.hrefAttrs,a=e.numberOfLines,l=e.onClick,m=e.onLayout,v=e.onPress,y=e.onMoveShouldSetResponder,k=e.onMoveShouldSetResponderCapture,b=e.onResponderEnd,R=e.onResponderGrant,C=e.onResponderMove,w=e.onResponderReject,E=e.onResponderRelease,N=e.onResponderStart,T=e.onResponderTerminate,_=e.onResponderTerminationRequest,A=e.onScrollShouldSetResponder,D=e.onScrollShouldSetResponderCapture,I=e.onSelectionChangeShouldSetResponder,L=e.onSelectionChangeShouldSetResponderCapture,M=e.onStartShouldSetResponder,X=e.onStartShouldSetResponderCapture,Z=e.selectable,P=(0,o.Z)(e,g),j=r.useContext(f.Z),V=r.useRef(null),W=(0,h.PE)().direction;(0,p.Z)(V,m),(0,c.Z)(V,{onMoveShouldSetResponder:y,onMoveShouldSetResponderCapture:k,onResponderEnd:b,onResponderGrant:R,onResponderMove:C,onResponderReject:w,onResponderRelease:E,onResponderStart:N,onResponderTerminate:T,onResponderTerminationRequest:_,onScrollShouldSetResponder:A,onScrollShouldSetResponderCapture:D,onSelectionChangeShouldSetResponder:I,onSelectionChangeShouldSetResponderCapture:L,onStartShouldSetResponder:M,onStartShouldSetResponderCapture:X});var G=r.useCallback((e=>{null!=l?l(e):null!=v&&(e.stopPropagation(),v(e))}),[l,v]),O=j?"span":"div",B=null!=e.lang?(0,h.w1)(e.lang):null,H=e.dir||B,z=H||W,Y=(e=>(0,s.Z)(e,x))(P);if(Y.dir=H,j||(Y.dir=null!=H?H:"auto"),(l||v)&&(Y.onClick=G),Y.style=[null!=a&&a>1&&{WebkitLineClamp:a},!0===j?S.textHasAncestor$raw:S.text$raw,1===a&&S.textOneLine,null!=a&&a>1&&S.textMultiLine,e.style,!0===Z&&S.selectable,!1===Z&&S.notSelectable,v&&S.pressable],null!=e.href&&(O="a",null!=n)){var U=n.download,q=n.rel,$=n.target;null!=U&&(Y.download=U),null!=q&&(Y.rel=q),"string"==typeof $&&(Y.target="_"!==$.charAt(0)?"_"+$:$)}var F=(0,u.Z)(Y),J=(0,d.Z)(V,F,t);Y.ref=J;var K=(0,i.Z)(O,Y,{writingDirection:z});return j?K:r.createElement(f.Z.Provider,{value:!0},K)}));v.displayName="Text";var y={backgroundColor:"transparent",border:"0 solid black",boxSizing:"border-box",color:"black",display:"inline",font:"14px System",listStyle:"none",margin:0,padding:0,textAlign:"inherit",textDecoration:"none",whiteSpace:"pre-wrap",wordWrap:"break-word"},S=m.Z.create({text$raw:y,textHasAncestor$raw:(0,a.Z)((0,a.Z)({},y),{},{color:"inherit",font:"inherit",whiteSpace:"inherit"}),textOneLine:{maxWidth:"100%",overflow:"hidden",textOverflow:"ellipsis",whiteSpace:"nowrap",wordWrap:"normal"},textMultiLine:{display:"-webkit-box",maxWidth:"100%",overflow:"hidden",textOverflow:"ellipsis",WebkitBoxOrient:"vertical"},notSelectable:{userSelect:"none"},selectable:{userSelect:"text"},pressable:{cursor:"pointer"}});const k=v}}]);