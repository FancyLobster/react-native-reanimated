"use strict";(self.webpackChunkreact_native_reanimated_docs=self.webpackChunkreact_native_reanimated_docs||[]).push([[9174],{15680:(e,t,n)=>{n.d(t,{xA:()=>c,yg:()=>y});var a=n(96540);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),d=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=d(e.components);return a.createElement(l.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),p=d(n),m=r,y=p["".concat(l,".").concat(m)]||p[m]||u[m]||o;return n?a.createElement(y,i(i({ref:t},c),{},{components:n})):a.createElement(y,i({ref:t},c))}));function y(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[p]="string"==typeof e?e:r,i[1]=s;for(var d=2;d<o;d++)i[d]=n[d];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},37095:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>P,contentTitle:()=>h,default:()=>x,frontMatter:()=>b,metadata:()=>N,toc:()=>C});var a=n(58168),r=n(96540),o=n(15680),i=n(9176),s=n(80101),l=n(91691),d=n(78786),c=n(46096),p=n(98391),u=n(92220);const m=["#FFE780","#87CCE8","#FFA3A1","#B1DFD0","#B58DF1"],y={code:"function anonymous(){const{setNativeProps,animatedRef,COLORS}=this.__closure;setNativeProps(animatedRef,{backgroundColor:COLORS[Math.floor(Math.random()*COLORS.length)]});}"};function g(){const e=(0,d.a)();return r.createElement(i.A,{style:f.container},r.createElement(u.X,{ref:e,style:f.box}),r.createElement(s.A,{title:"change color",onPress:()=>{(0,c.Jy)(function(){const t=function(){(0,p._)(e,{backgroundColor:m[Math.floor(Math.random()*m.length)]})};return t.__closure={setNativeProps:p._,animatedRef:e,COLORS:m},t.__workletHash=8389294944519,t.__initData=y,t}())()}}))}const f=l.A.create({container:{flex:1,alignItems:"center",justifyContent:"center"},box:{height:120,width:120,backgroundColor:"#B58DF1",borderRadius:20,marginBottom:30}}),v="import React from 'react';\nimport { Button, StyleSheet, View } from 'react-native';\nimport Animated, {\n  runOnUI,\n  setNativeProps,\n  useAnimatedRef,\n} from 'react-native-reanimated';\n\nconst COLORS = ['#FFE780', '#87CCE8', '#FFA3A1', '#B1DFD0', '#B58DF1'];\n\nexport default function Example() {\n  const animatedRef = useAnimatedRef();\n\n  const handlePress = () => {\n    runOnUI(() => {\n      // highlight-next-line\n      setNativeProps(animatedRef, {\n        backgroundColor: COLORS[Math.floor(Math.random() * COLORS.length)],\n        // highlight-next-line\n      });\n    })();\n  };\n\n  return (\n    <View style={styles.container}>\n      <Animated.View ref={animatedRef} style={styles.box} />\n      <Button title=\"change color\" onPress={handlePress} />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  box: {\n    height: 120,\n    width: 120,\n    backgroundColor: '#B58DF1',\n    borderRadius: 20,\n    marginBottom: 30,\n  },\n});\n",b={sidebar_position:7},h="setNativeProps",N={unversionedId:"advanced/setNativeProps",id:"advanced/setNativeProps",title:"setNativeProps",description:"setNativeProps lets you imperatively update component properties.",source:"@site/docs/advanced/setNativeProps.mdx",sourceDirName:"advanced",slug:"/advanced/setNativeProps",permalink:"/react-native-reanimated/docs/advanced/setNativeProps",draft:!1,editUrl:"https://github.com/software-mansion/react-native-reanimated/tree/main/docs/docs/advanced/setNativeProps.mdx",tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7},sidebar:"tutorialSidebar",previous:{title:"dispatchCommand",permalink:"/react-native-reanimated/docs/advanced/dispatchCommand"},next:{title:"Guides",permalink:"/react-native-reanimated/docs/category/guides"}},P={},C=[{value:"Reference",id:"reference",level:2},{value:"Arguments",id:"arguments",level:3},{value:"<code>animatedRef</code>",id:"animatedref",level:4},{value:"<code>updates</code>",id:"updates",level:4},{value:"Returns",id:"returns",level:3},{value:"Example",id:"example",level:2},{value:"Remarks",id:"remarks",level:2},{value:"Platform compatibility",id:"platform-compatibility",level:2}],O=(w="InteractiveExample",function(e){return console.warn("Component "+w+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.yg)("div",e)});var w;const A={toc:C},R="wrapper";function x(e){let{components:t,...n}=e;return(0,o.yg)(R,(0,a.A)({},A,n,{components:t,mdxType:"MDXLayout"}),(0,o.yg)("h1",{id:"setnativeprops"},"setNativeProps"),(0,o.yg)("p",null,(0,o.yg)("inlineCode",{parentName:"p"},"setNativeProps")," lets you imperatively update component properties."),(0,o.yg)("admonition",{type:"caution"},(0,o.yg)("p",{parentName:"admonition"},(0,o.yg)("inlineCode",{parentName:"p"},"setNativeProps")," is an escape hatch for specific edge-cases."),(0,o.yg)("p",{parentName:"admonition"},"You should always reach for ",(0,o.yg)("a",{parentName:"p",href:"/docs/core/useAnimatedStyle"},(0,o.yg)("inlineCode",{parentName:"a"},"useAnimatedStyle"))," and ",(0,o.yg)("a",{parentName:"p",href:"/docs/core/useAnimatedProps"},(0,o.yg)("inlineCode",{parentName:"a"},"useAnimatedProps"))," first when animating styles or properties.")),(0,o.yg)("h2",{id:"reference"},"Reference"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-jsx"},"import { setNativeProps } from 'react-native-reanimated';\n\nfunction App() {\n  const animatedRef = useAnimatedRef();\n\n  const tap = Gesture.Tap().onEnd(() => {\n    // highlight-start\n    setNativeProps(animatedRef, { text: '' });\n    // highlight-end\n  });\n\n  return <TextInput ref={animatedRef} />;\n}\n")),(0,o.yg)("details",null,(0,o.yg)("summary",null,"Type definitions"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-typescript"},"function setNativeProps<T extends Component>(\n  animatedRef: AnimatedRef<T>,\n  updates: StyleProps\n) => void;\n"))),(0,o.yg)("h3",{id:"arguments"},"Arguments"),(0,o.yg)("h4",{id:"animatedref"},(0,o.yg)("inlineCode",{parentName:"h4"},"animatedRef")),(0,o.yg)("p",null,"An ",(0,o.yg)("a",{parentName:"p",href:"/docs/core/useAnimatedRef#returns"},"animated ref")," connected to the component you'd want to update. The animated ref has to be passed either to an ",(0,o.yg)("a",{parentName:"p",href:"/docs/fundamentals/glossary#animated-component"},"Animated component")," or a React Native built-in component."),(0,o.yg)("h4",{id:"updates"},(0,o.yg)("inlineCode",{parentName:"h4"},"updates")),(0,o.yg)("p",null,"An object with properties you want to update. These could be both style props (eg. ",(0,o.yg)("inlineCode",{parentName:"p"},"width"),", ",(0,o.yg)("inlineCode",{parentName:"p"},"backgroundColor"),") and regular props (eg. ",(0,o.yg)("inlineCode",{parentName:"p"},"text"),")."),(0,o.yg)("h3",{id:"returns"},"Returns"),(0,o.yg)("p",null,(0,o.yg)("inlineCode",{parentName:"p"},"setNativeProps")," returns ",(0,o.yg)("inlineCode",{parentName:"p"},"undefined"),"."),(0,o.yg)("h2",{id:"example"},"Example"),(0,o.yg)(O,{src:v,component:(0,o.yg)(g,{mdxType:"SetNativeProps"}),mdxType:"InteractiveExample"}),(0,o.yg)("h2",{id:"remarks"},"Remarks"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("p",{parentName:"li"},"You should always reach for ",(0,o.yg)("a",{parentName:"p",href:"docs/core/useAnimatedStyle"},(0,o.yg)("inlineCode",{parentName:"a"},"useAnimatedStyle"))," and ",(0,o.yg)("a",{parentName:"p",href:"docs/core/useAnimatedProps"},(0,o.yg)("inlineCode",{parentName:"a"},"useAnimatedProps"))," first when animating styles or properties.")),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("p",{parentName:"li"},(0,o.yg)("inlineCode",{parentName:"p"},"setNativeProps")," is supposed to only be used on the ",(0,o.yg)("a",{parentName:"p",href:"/docs/fundamentals/glossary#ui-thread"},"UI thread"),".")),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("p",{parentName:"li"},(0,o.yg)("inlineCode",{parentName:"p"},"setNativeProps")," function was created to allow updating props imperatively from gesture handlers. Because in other cases, you need to wrap ",(0,o.yg)("inlineCode",{parentName:"p"},"setNativeProps")," with an additional ",(0,o.yg)("inlineCode",{parentName:"p"},"runOnUI")," call, React Native's ",(0,o.yg)("a",{parentName:"p",href:"https://reactnative.dev/docs/animations#setnativeprops"},"built-in ",(0,o.yg)("inlineCode",{parentName:"a"},"setNativeProps"))," proves to work better with fewer jumps between runtimes."))),(0,o.yg)("h2",{id:"platform-compatibility"},"Platform compatibility"),(0,o.yg)("div",{className:"platform-compatibility"},(0,o.yg)("table",null,(0,o.yg)("thead",{parentName:"table"},(0,o.yg)("tr",{parentName:"thead"},(0,o.yg)("th",{parentName:"tr",align:null},"Android"),(0,o.yg)("th",{parentName:"tr",align:null},"iOS"),(0,o.yg)("th",{parentName:"tr",align:null},"Web"))),(0,o.yg)("tbody",{parentName:"table"},(0,o.yg)("tr",{parentName:"tbody"},(0,o.yg)("td",{parentName:"tr",align:null},"\u2705"),(0,o.yg)("td",{parentName:"tr",align:null},"\u2705"),(0,o.yg)("td",{parentName:"tr",align:null},"\u2705"))))))}x.isMDXComponent=!0},92220:(e,t,n)=>{n.d(t,{X:()=>r});var a=n(9176);const r=(0,n(72089).b)(a.A)},78786:(e,t,n)=>{n.d(t,{a:()=>m});var a=n(96540),r=n(50014),o=n(57659),i=n(30221),s=n(46038),l=n(4992),d=n(67862),c=n(38507);const p=(0,c.HZ)();function u(e){return(0,c.J2)()&&e.getNativeScrollRef?e.getNativeScrollRef():!(0,c.J2)()&&e.getScrollableNode?e.getScrollableNode():e}function m(){const e=(0,r.U)(-1),t=(0,r.U)(null),n=(0,a.useRef)();if(!n.current){const a=n=>{if(n){const i=(0,c.J2)()?o.t:l.A,s=()=>p?u(n):i(u(n));var r;if(e.value=s(),a.getTag=(0,c.J2)()?()=>(0,l.A)(u(n)):s,a.current=n,"ios"===d.A.OS&&!(0,c.J2)())t.value=(null==n||null===(r=n.viewConfig)||void 0===r?void 0:r.uiViewClassName)||"RCTView"}return e.value};a.current=null;const r=(0,i.jt)({__init:()=>{const n=()=>e.value;return n.viewName=t,n}});s.A.set(a,r),n.current=a}return n.current}},98391:(e,t,n)=>{n.d(t,{_:()=>r});var a=n(7830);function r(e,t){const n=e();(0,a.u)(t,{_component:n})}},80101:(e,t,n)=>{n.d(t,{A:()=>b});var a=n(96540),r=n(91691),o=n(58168),i=n(98587),s=n(11804),l=n(17069),d=n(9176),c=["activeOpacity","delayPressIn","delayPressOut","delayLongPress","disabled","focusable","onLongPress","onPress","onPressIn","onPressOut","rejectResponderTermination","style"];function p(e,t){var n=e.activeOpacity,r=e.delayPressIn,p=e.delayPressOut,m=e.delayLongPress,y=e.disabled,g=e.focusable,f=e.onLongPress,v=e.onPress,b=e.onPressIn,h=e.onPressOut,N=e.rejectResponderTermination,P=e.style,C=(0,i.A)(e,c),O=(0,a.useRef)(null),w=(0,s.A)(t,O),A=(0,a.useState)("0s"),R=A[0],x=A[1],S=(0,a.useState)(null),E=S[0],k=S[1],D=(0,a.useCallback)(((e,t)=>{k(e),x(t?t/1e3+"s":"0s")}),[k,x]),j=(0,a.useCallback)((e=>{D(null!=n?n:.2,e)}),[n,D]),T=(0,a.useCallback)((e=>{D(null,e)}),[D]),_=(0,a.useMemo)((()=>({cancelable:!N,disabled:y,delayLongPress:m,delayPressStart:r,delayPressEnd:p,onLongPress:f,onPress:v,onPressStart(e){var t=null!=e.dispatchConfig?"onResponderGrant"===e.dispatchConfig.registrationName:"keydown"===e.type;j(t?0:150),null!=b&&b(e)},onPressEnd(e){T(250),null!=h&&h(e)}})),[m,r,p,y,f,v,b,h,N,j,T]),I=(0,l.A)(O,_);return a.createElement(d.A,(0,o.A)({},C,I,{accessibilityDisabled:y,focusable:!y&&!1!==g,pointerEvents:y?"none":void 0,ref:w,style:[u.root,!y&&u.actionable,P,null!=E&&{opacity:E},{transitionDuration:R}]}))}var u=r.A.create({root:{transitionProperty:"opacity",transitionDuration:"0.15s",userSelect:"none"},actionable:{cursor:"pointer",touchAction:"manipulation"}}),m=a.memo(a.forwardRef(p));m.displayName="TouchableOpacity";const y=m;var g=n(78506),f=a.forwardRef(((e,t)=>{var n=e.accessibilityLabel,r=e.color,o=e.disabled,i=e.onPress,s=e.testID,l=e.title;return a.createElement(y,{accessibilityLabel:n,accessibilityRole:"button",disabled:o,focusable:!o,onPress:i,ref:t,style:[v.button,r&&{backgroundColor:r},o&&v.buttonDisabled],testID:s},a.createElement(g.A,{style:[v.text,o&&v.textDisabled]},l))}));f.displayName="Button";var v=r.A.create({button:{backgroundColor:"#2196F3",borderRadius:2},text:{color:"#fff",fontWeight:"500",padding:8,textAlign:"center",textTransform:"uppercase"},buttonDisabled:{backgroundColor:"#dfdfdf"},textDisabled:{color:"#a1a1a1"}});const b=f}}]);