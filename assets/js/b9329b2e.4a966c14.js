"use strict";(self.webpackChunkreact_native_reanimated_docs=self.webpackChunkreact_native_reanimated_docs||[]).push([[6573],{15680:(e,a,n)=>{n.d(a,{xA:()=>d,yg:()=>m});var t=n(96540);function r(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function l(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,t)}return n}function i(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?l(Object(n),!0).forEach((function(a){r(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function o(e,a){if(null==e)return{};var n,t,r=function(e,a){if(null==e)return{};var n,t,r={},l=Object.keys(e);for(t=0;t<l.length;t++)n=l[t],a.indexOf(n)>=0||(r[n]=e[n]);return r}(e,a);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(t=0;t<l.length;t++)n=l[t],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=t.createContext({}),u=function(e){var a=t.useContext(s),n=a;return e&&(n="function"==typeof e?e(a):i(i({},a),e)),n},d=function(e){var a=u(e.components);return t.createElement(s.Provider,{value:a},e.children)},c="mdxType",p={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},y=t.forwardRef((function(e,a){var n=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),c=u(n),y=r,m=c["".concat(s,".").concat(y)]||c[y]||p[y]||l;return n?t.createElement(m,i(i({ref:a},d),{},{components:n})):t.createElement(m,i({ref:a},d))}));function m(e,a){var n=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=y;var o={};for(var s in a)hasOwnProperty.call(a,s)&&(o[s]=a[s]);o.originalType=e,o[c]="string"==typeof e?e:r,i[1]=o;for(var u=2;u<l;u++)i[u]=n[u];return t.createElement.apply(null,i)}return t.createElement.apply(null,n)}y.displayName="MDXCreateElement"},2184:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>h,contentTitle:()=>g,default:()=>P,frontMatter:()=>m,metadata:()=>v,toc:()=>f});var t=n(58168),r=n(96540),l=n(15680),i=n(9176),o=n(80101),s=n(91691),u=n(50014),d=n(92220);function c(){const e=(0,u.U)(100);return r.createElement(i.A,{style:p.container},r.createElement(d.X,{style:{...p.box,width:e}}),r.createElement(o.A,{onPress:()=>{e.value+=50},title:"Click me"}))}const p=s.A.create({container:{flex:1,alignItems:"center"},box:{height:100,backgroundColor:"#b58df1",borderRadius:20,marginVertical:64}}),y="import React from 'react';\nimport { Button, StyleSheet, View } from 'react-native';\nimport Animated, { useSharedValue } from 'react-native-reanimated';\n\nexport default function App() {\n  // highlight-next-line\n  const width = useSharedValue(100);\n\n  const handlePress = () => {\n    // highlight-next-line\n    width.value += 50;\n  };\n\n  return (\n    <View style={styles.container}>\n      <Animated.View style={{ ...styles.box, width }} />\n      <Button onPress={handlePress} title=\"Click me\" />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n  },\n  box: {\n    height: 100,\n    backgroundColor: '#b58df1',\n    borderRadius: 20,\n    marginVertical: 64,\n  },\n});\n",m={sidebar_position:1},g="useSharedValue",v={unversionedId:"core/useSharedValue",id:"core/useSharedValue",title:"useSharedValue",description:"useSharedValue lets you define shared values in your components.",source:"@site/docs/core/useSharedValue.mdx",sourceDirName:"core",slug:"/core/useSharedValue",permalink:"/react-native-reanimated/docs/core/useSharedValue",draft:!1,editUrl:"https://github.com/software-mansion/react-native-reanimated/tree/main/docs/docs/core/useSharedValue.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Core",permalink:"/react-native-reanimated/docs/category/core"},next:{title:"useAnimatedStyle",permalink:"/react-native-reanimated/docs/core/useAnimatedStyle"}},h={},f=[{value:"Reference",id:"reference",level:2},{value:"Arguments",id:"arguments",level:3},{value:"<code>initialValue</code>",id:"initialvalue",level:4},{value:"Returns",id:"returns",level:3},{value:"Example",id:"example",level:2},{value:"Remarks",id:"remarks",level:2},{value:"Platform compatibility",id:"platform-compatibility",level:2}],b=e=>function(a){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,l.yg)("div",a)},N=b("InteractiveExample"),w=b("Indent"),x={toc:f},S="wrapper";function P(e){let{components:a,...n}=e;return(0,l.yg)(S,(0,t.A)({},x,n,{components:a,mdxType:"MDXLayout"}),(0,l.yg)("h1",{id:"usesharedvalue"},"useSharedValue"),(0,l.yg)("p",null,(0,l.yg)("inlineCode",{parentName:"p"},"useSharedValue")," lets you define ",(0,l.yg)("a",{parentName:"p",href:"/docs/fundamentals/glossary#shared-value"},"shared values")," in your components."),(0,l.yg)("h2",{id:"reference"},"Reference"),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-javascript"},"import { useSharedValue } from 'react-native-reanimated';\n\nfunction App() {\n  const sv = useSharedValue(100);\n\n  // read a shared value\n  console.log(sv.value);\n\n  // and modify it\n  sv.value += 50;\n}\n")),(0,l.yg)("details",null,(0,l.yg)("summary",null,"Type definitions"),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-typescript"},"interface SharedValue<Value = unknown> {\n  value: Value;\n  addListener: (listenerID: number, listener: (value: Value) => void) => void;\n  removeListener: (listenerID: number) => void;\n  modify: (\n    modifier?: <T extends Value>(value: T) => T,\n    forceUpdate?: boolean\n  ) => void;\n}\n\nfunction useSharedValue<Value>(\n  initialValue: Value,\n  oneWayReadsOnly?: boolean\n): SharedValue<Value>;\n"))),(0,l.yg)("h3",{id:"arguments"},"Arguments"),(0,l.yg)("h4",{id:"initialvalue"},(0,l.yg)("inlineCode",{parentName:"h4"},"initialValue")),(0,l.yg)("p",null,"The value you want to be initially stored to a ",(0,l.yg)("inlineCode",{parentName:"p"},".value")," property. It can be any JavaScript value like ",(0,l.yg)("inlineCode",{parentName:"p"},"number"),", ",(0,l.yg)("inlineCode",{parentName:"p"},"string")," or ",(0,l.yg)("inlineCode",{parentName:"p"},"boolean")," but also data structures such as ",(0,l.yg)("inlineCode",{parentName:"p"},"array")," and ",(0,l.yg)("inlineCode",{parentName:"p"},"object"),"."),(0,l.yg)("h3",{id:"returns"},"Returns"),(0,l.yg)("p",null,(0,l.yg)("inlineCode",{parentName:"p"},"useSharedValue")," returns a shared value with a single ",(0,l.yg)("inlineCode",{parentName:"p"},"value")," property initially set to the ",(0,l.yg)("inlineCode",{parentName:"p"},"initialValue"),"."),(0,l.yg)("p",null,"Values stored in shared values can be accessed and modified by their ",(0,l.yg)("inlineCode",{parentName:"p"},".value")," property."),(0,l.yg)("h2",{id:"example"},"Example"),(0,l.yg)(N,{src:y,component:(0,l.yg)(c,{mdxType:"SharedValue"}),showCode:!0,mdxType:"InteractiveExample"}),(0,l.yg)("h2",{id:"remarks"},"Remarks"),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("p",{parentName:"li"},"When you change the ",(0,l.yg)("inlineCode",{parentName:"p"},"sv.value")," Reanimated will update the styles and keep the shared value in sync between the threads. However, this won't trigger a typical React re-render because a shared value is a plain JavaScript object.")),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("p",{parentName:"li"},"When you change the ",(0,l.yg)("inlineCode",{parentName:"p"},"sv.value")," the update will happen synchronously on the ",(0,l.yg)("a",{parentName:"p",href:"/docs/fundamentals/glossary#ui-thread"},"UI thread"),". On the other hand, on the ",(0,l.yg)("a",{parentName:"p",href:"/docs/fundamentals/glossary#javascript-thread"},"JavaScript thread")," the update is asynchronous. This means when you try to immediately log the ",(0,l.yg)("inlineCode",{parentName:"p"},"value")," after the change it will log the previously stored value."))),(0,l.yg)(w,{mdxType:"Indent"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-javascript"},"function App() {\n  const sv = useSharedValue(100); // initially set 100\n\n  sv.value += 50; // changing value stored in a shared value\n\n  console.log(sv.value); // will still log 100\n}\n"))),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},"Stay away from ",(0,l.yg)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment"},"destructuring assignment")," when working with shared values. While this is a completely valid JavaScript code it will make Reanimated unable to keep the reactivity of a shared value.")),(0,l.yg)(w,{mdxType:"Indent"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-javascript"},"function App() {\n  let { value } = sv; // don't do this\n\n  console.log(value); // you can read the value just fine\n\n  value += 50; // but this won't update the styles\n}\n"))),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},"When storing objects in a shared value, make sure to reassign an object instead of changing the properties individually.")),(0,l.yg)(w,{mdxType:"Indent"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-javascript"},"function App() {\n  const sv = useSharedValue({ x: 0, y: 0 });\n\n  sv.value.x = 50; // Reanimated loses reactivity \ud83d\udea8\n\n  sv.value = { x: 50, y: 0 }; // \u2705\n}\n"))),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},"When storing large arrays or complex objects in a shared value, you can use ",(0,l.yg)("inlineCode",{parentName:"li"},".modify")," method to alter the existing value instead of creating a new one.")),(0,l.yg)(w,{mdxType:"Indent"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-javascript"},"function App() {\n  const sv = useSharedValue([1, 2, 3]);\n\n  sv.value.push(1000); // Reanimated loses reactivity \ud83d\udea8\n\n  sv.value = [...sv.value, 1000]; // works, but creates a new copy \u26a0\ufe0f\n\n  sv.modify((value) => {\n    'worklet';\n    value.push(1000); // \u2705\n    return value;\n  });\n}\n"))),(0,l.yg)("h2",{id:"platform-compatibility"},"Platform compatibility"),(0,l.yg)("div",{className:"platform-compatibility"},(0,l.yg)("table",null,(0,l.yg)("thead",{parentName:"table"},(0,l.yg)("tr",{parentName:"thead"},(0,l.yg)("th",{parentName:"tr",align:null},"Android"),(0,l.yg)("th",{parentName:"tr",align:null},"iOS"),(0,l.yg)("th",{parentName:"tr",align:null},"Web"))),(0,l.yg)("tbody",{parentName:"table"},(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"\u2705"),(0,l.yg)("td",{parentName:"tr",align:null},"\u2705"),(0,l.yg)("td",{parentName:"tr",align:null},"\u2705"))))))}P.isMDXComponent=!0},92220:(e,a,n)=>{n.d(a,{X:()=>r});var t=n(9176);const r=(0,n(72089).b)(t.A)},80101:(e,a,n)=>{n.d(a,{A:()=>f});var t=n(96540),r=n(91691),l=n(58168),i=n(98587),o=n(11804),s=n(17069),u=n(9176),d=["activeOpacity","delayPressIn","delayPressOut","delayLongPress","disabled","focusable","onLongPress","onPress","onPressIn","onPressOut","rejectResponderTermination","style"];function c(e,a){var n=e.activeOpacity,r=e.delayPressIn,c=e.delayPressOut,y=e.delayLongPress,m=e.disabled,g=e.focusable,v=e.onLongPress,h=e.onPress,f=e.onPressIn,b=e.onPressOut,N=e.rejectResponderTermination,w=e.style,x=(0,i.A)(e,d),S=(0,t.useRef)(null),P=(0,o.A)(a,S),V=(0,t.useState)("0s"),C=V[0],O=V[1],k=(0,t.useState)(null),A=k[0],j=k[1],R=(0,t.useCallback)(((e,a)=>{j(e),O(a?a/1e3+"s":"0s")}),[j,O]),T=(0,t.useCallback)((e=>{R(null!=n?n:.2,e)}),[n,R]),E=(0,t.useCallback)((e=>{R(null,e)}),[R]),D=(0,t.useMemo)((()=>({cancelable:!N,disabled:m,delayLongPress:y,delayPressStart:r,delayPressEnd:c,onLongPress:v,onPress:h,onPressStart(e){var a=null!=e.dispatchConfig?"onResponderGrant"===e.dispatchConfig.registrationName:"keydown"===e.type;T(a?0:150),null!=f&&f(e)},onPressEnd(e){E(250),null!=b&&b(e)}})),[y,r,c,m,v,h,f,b,N,T,E]),I=(0,s.A)(S,D);return t.createElement(u.A,(0,l.A)({},x,I,{accessibilityDisabled:m,focusable:!m&&!1!==g,pointerEvents:m?"none":void 0,ref:P,style:[p.root,!m&&p.actionable,w,null!=A&&{opacity:A},{transitionDuration:C}]}))}var p=r.A.create({root:{transitionProperty:"opacity",transitionDuration:"0.15s",userSelect:"none"},actionable:{cursor:"pointer",touchAction:"manipulation"}}),y=t.memo(t.forwardRef(c));y.displayName="TouchableOpacity";const m=y;var g=n(78506),v=t.forwardRef(((e,a)=>{var n=e.accessibilityLabel,r=e.color,l=e.disabled,i=e.onPress,o=e.testID,s=e.title;return t.createElement(m,{accessibilityLabel:n,accessibilityRole:"button",disabled:l,focusable:!l,onPress:i,ref:a,style:[h.button,r&&{backgroundColor:r},l&&h.buttonDisabled],testID:o},t.createElement(g.A,{style:[h.text,l&&h.textDisabled]},s))}));v.displayName="Button";var h=r.A.create({button:{backgroundColor:"#2196F3",borderRadius:2},text:{color:"#fff",fontWeight:"500",padding:8,textAlign:"center",textTransform:"uppercase"},buttonDisabled:{backgroundColor:"#dfdfdf"},textDisabled:{color:"#a1a1a1"}});const f=v}}]);