"use strict";(self.webpackChunkreact_native_reanimated_docs=self.webpackChunkreact_native_reanimated_docs||[]).push([[5790],{15680:(e,n,t)=>{t.d(n,{xA:()=>d,yg:()=>g});var a=t(96540);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,a,i=function(e,n){if(null==e)return{};var t,a,i={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var l=a.createContext({}),u=function(e){var n=a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},d=function(e){var n=u(e.components);return a.createElement(l.Provider,{value:n},e.children)},m="mdxType",c={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},p=a.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),m=u(t),p=i,g=m["".concat(l,".").concat(p)]||m[p]||c[p]||o;return t?a.createElement(g,r(r({ref:n},d),{},{components:t})):a.createElement(g,r({ref:n},d))}));function g(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,r=new Array(o);r[0]=p;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s[m]="string"==typeof e?e:i,r[1]=s;for(var u=2;u<o;u++)r[u]=t[u];return a.createElement.apply(null,r)}return a.createElement.apply(null,t)}p.displayName="MDXCreateElement"},50602:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>v,contentTitle:()=>y,default:()=>A,frontMatter:()=>h,metadata:()=>f,toc:()=>b});var a=t(58168),i=t(96540),o=t(15680),r=t(9176),s=t(80101),l=t(91691),u=t(50014),d=t(27979),m=t(92220);function c(){const e=(0,u.U)(100);return i.createElement(r.A,{style:p.container},i.createElement(m.X,{style:{...p.box,width:e}}),i.createElement(s.A,{onPress:()=>{e.value=(0,d.e)(e.value+50)},title:"Click me"}))}const p=l.A.create({container:{flex:1,alignItems:"center"},box:{height:100,backgroundColor:"#b58df1",borderRadius:20,marginVertical:64}}),g="import React from 'react';\nimport { Button, StyleSheet, View } from 'react-native';\nimport Animated, { useSharedValue, withSpring } from 'react-native-reanimated';\n\nexport default function App() {\n  const width = useSharedValue(100);\n\n  const handlePress = () => {\n    width.value = withSpring(width.value + 50);\n  };\n\n  return (\n    <View style={styles.container}>\n      <Animated.View style={{ ...styles.box, width }} />\n      <Button onPress={handlePress} title=\"Click me\" />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n  },\n  box: {\n    height: 100,\n    backgroundColor: '#b58df1',\n    borderRadius: 20,\n    marginVertical: 64,\n  },\n});\n",h={sidebar_position:2},y="Your First Animation",f={unversionedId:"fundamentals/your-first-animation",id:"fundamentals/your-first-animation",title:"Your First Animation",description:"In this section, we'll guide you through the basic concepts of Reanimated. If you're new to Reanimated, you're in the right hands! We're going to start by building a simple animation which will help you develop a basic understanding of the library. Then, in the following sections, we're going to build on top of this knowledge and further expand your skills. Let's go!",source:"@site/docs/fundamentals/your-first-animation.mdx",sourceDirName:"fundamentals",slug:"/fundamentals/your-first-animation",permalink:"/react-native-reanimated/docs/fundamentals/your-first-animation",draft:!1,editUrl:"https://github.com/software-mansion/react-native-reanimated/tree/main/docs/docs/fundamentals/your-first-animation.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Getting started",permalink:"/react-native-reanimated/docs/fundamentals/getting-started"},next:{title:"Animating styles and props",permalink:"/react-native-reanimated/docs/fundamentals/animating-styles-and-props"}},v={},b=[{value:"Using an Animated component",id:"using-an-animated-component",level:2},{value:"Defining a shared value",id:"defining-a-shared-value",level:2},{value:"Using a shared value",id:"using-a-shared-value",level:2},{value:"Using an animation function",id:"using-an-animation-function",level:2},{value:"Summary",id:"summary",level:2},{value:"What&#39;s next?",id:"whats-next",level:2}],w=(N="InteractiveExample",function(e){return console.warn("Component "+N+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.yg)("div",e)});var N;const C={toc:b},x="wrapper";function A(e){let{components:n,...t}=e;return(0,o.yg)(x,(0,a.A)({},C,t,{components:n,mdxType:"MDXLayout"}),(0,o.yg)("h1",{id:"your-first-animation"},"Your First Animation"),(0,o.yg)("p",null,"In this section, we'll guide you through the basic concepts of Reanimated. If you're new to Reanimated, you're in the right hands! We're going to start by building a simple animation which will help you develop a basic understanding of the library. Then, in the following sections, we're going to build on top of this knowledge and further expand your skills. Let's go!"),(0,o.yg)("h2",{id:"using-an-animated-component"},"Using an Animated component"),(0,o.yg)("p",null,"Let's start by having something that we could see on the screen. First, to create an animatable component you need to import an ",(0,o.yg)("inlineCode",{parentName:"p"},"Animated")," object:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-jsx"},"import Animated from 'react-native-reanimated';\n")),(0,o.yg)("p",null,"This ",(0,o.yg)("inlineCode",{parentName:"p"},"Animated")," object wraps React Native built-ins such as ",(0,o.yg)("inlineCode",{parentName:"p"},"View"),", ",(0,o.yg)("inlineCode",{parentName:"p"},"ScrollView")," or ",(0,o.yg)("inlineCode",{parentName:"p"},"FlatList"),"."),(0,o.yg)("p",null,"You use these components as any other JSX components:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-jsx",metastring:"{5}","{5}":!0},"import Animated from 'react-native-reanimated';\n\nexport default function App() {\n  return (\n    <Animated.View\n      style={{\n        width: 100,\n        height: 100,\n        backgroundColor: 'violet',\n      }}\n    />\n  );\n}\n")),(0,o.yg)("admonition",{type:"info"},(0,o.yg)("p",{parentName:"admonition"},"You can create your own custom Animated components with ",(0,o.yg)("a",{parentName:"p",href:"/docs/core/createAnimatedComponent"},(0,o.yg)("inlineCode",{parentName:"a"},"createAnimatedComponent")),".")),(0,o.yg)("h2",{id:"defining-a-shared-value"},"Defining a shared value"),(0,o.yg)("p",null,"A ",(0,o.yg)("a",{parentName:"p",href:"/docs/fundamentals/glossary#shared-value"},"shared value")," is a driving factor of all your animations. You can think of it as a React state which is automagically kept in sync between the \u201cJavaScript\u201d and the \u201cnative\u201d side of your app (hence the name). You create shared values using a ",(0,o.yg)("inlineCode",{parentName:"p"},"useSharedValue")," hook:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-jsx"},"import { useSharedValue } from 'react-native-reanimated';\n")),(0,o.yg)("p",null,"As with any other ",(0,o.yg)("a",{parentName:"p",href:"https://reactjs.org/docs/hooks-rules.html"},"React hook"),", you need to define it in your component's body. In a shared value, you can store any JS value like ",(0,o.yg)("inlineCode",{parentName:"p"},"number"),", ",(0,o.yg)("inlineCode",{parentName:"p"},"string")," or ",(0,o.yg)("inlineCode",{parentName:"p"},"boolean")," but also data structures such as ",(0,o.yg)("inlineCode",{parentName:"p"},"array")," and ",(0,o.yg)("inlineCode",{parentName:"p"},"object"),"."),(0,o.yg)("p",null,"For now, let's use ",(0,o.yg)("inlineCode",{parentName:"p"},"100")," as the default value of the ",(0,o.yg)("inlineCode",{parentName:"p"},"useSharedValue")," hook and pass the returned value as an inline style of the ",(0,o.yg)("inlineCode",{parentName:"p"},"Animated.View"),":"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-jsx",metastring:"{4,9}","{4,9}":!0},"import Animated, { useSharedValue } from 'react-native-reanimated';\n\nexport default function App() {\n  const width = useSharedValue(100);\n\n  return (\n    <Animated.View\n      style={{\n        width,\n        height: 100,\n        backgroundColor: 'violet',\n      }}\n    />\n  );\n}\n")),(0,o.yg)("h2",{id:"using-a-shared-value"},"Using a shared value"),(0,o.yg)("p",null,"Let's create a very simple animation that will animate a ",(0,o.yg)("inlineCode",{parentName:"p"},"width")," of an element. We'll make it expand by ",(0,o.yg)("inlineCode",{parentName:"p"},"50px")," on each button press. We can do this by modifying a shared value connected to the ",(0,o.yg)("inlineCode",{parentName:"p"},"width")," property of an ",(0,o.yg)("inlineCode",{parentName:"p"},"Animated.View")," component. I know it might sound complicated, but it's actually quite simple."),(0,o.yg)("p",null,"Values stored in shared values are accessed and modified by their ",(0,o.yg)("inlineCode",{parentName:"p"},".value")," property."),(0,o.yg)("p",null,"There's no setter or anything - you simply mutate the ",(0,o.yg)("inlineCode",{parentName:"p"},".value")," property like there's no tomorrow."),(0,o.yg)("p",null,"Let's define a ",(0,o.yg)("inlineCode",{parentName:"p"},"handlePress")," function inside of which we'll modify the shared value:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-jsx",metastring:"{8,20}","{8,20}":!0},"import { Button, View } from 'react-native';\nimport Animated, { useSharedValue } from 'react-native-reanimated';\n\nexport default function App() {\n  const width = useSharedValue(100);\n\n  const handlePress = () => {\n    width.value = width.value + 50;\n  };\n\n  return (\n    <View style={{ flex: 1, alignItems: 'center' }}>\n      <Animated.View\n        style={{\n          width,\n          height: 100,\n          backgroundColor: 'violet',\n        }}\n      />\n      <Button onPress={handlePress} title=\"Click me\" />\n    </View>\n  );\n}\n")),(0,o.yg)("p",null,"Please hold on a second before you shorten ",(0,o.yg)("inlineCode",{parentName:"p"},"width.value = width.value + 50")," to ",(0,o.yg)("inlineCode",{parentName:"p"},"width.value += 50"),". We're preparing this code for the final step which will finally bring our animation to life!"),(0,o.yg)("admonition",{type:"caution"},(0,o.yg)("p",{parentName:"admonition"},"It's a common mistake to modify a shared value directly like this: ",(0,o.yg)("del",{parentName:"p"},(0,o.yg)("inlineCode",{parentName:"del"},"sv = sv + 100;")),". Always remember to access the shared value by using the ",(0,o.yg)("inlineCode",{parentName:"p"},".value")," property instead. Here, the correct usage would be ",(0,o.yg)("inlineCode",{parentName:"p"},"sv.value = sv.value + 100;"),".")),(0,o.yg)("h2",{id:"using-an-animation-function"},"Using an animation function"),(0,o.yg)("p",null,"Finally, import ",(0,o.yg)("inlineCode",{parentName:"p"},"withSpring")," function and wrap around ",(0,o.yg)("inlineCode",{parentName:"p"},"width.value + 50")," in the ",(0,o.yg)("inlineCode",{parentName:"p"},"handlePress")," function so that the value which ",(0,o.yg)("inlineCode",{parentName:"p"},"withSpring")," returns modifies the shared value. This will create a bouncy spring animation that transitions the width of the element from its current value (here ",(0,o.yg)("inlineCode",{parentName:"p"},"width.value"),") to the new one (here ",(0,o.yg)("inlineCode",{parentName:"p"},"width.value + 50"),")."),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-jsx",metastring:"{2,8}","{2,8}":!0},"import { Button, View } from 'react-native';\nimport Animated, { useSharedValue, withSpring } from 'react-native-reanimated';\n\nexport default function App() {\n  const width = useSharedValue(100);\n\n  const handlePress = () => {\n    width.value = withSpring(width.value + 50);\n  };\n\n  return (\n    <View style={{ flex: 1, alignItems: 'center' }}>\n      <Animated.View\n        style={{\n          width,\n          height: 100,\n          backgroundColor: 'violet',\n        }}\n      />\n      <Button onPress={handlePress} title=\"Click me\" />\n    </View>\n  );\n}\n")),(0,o.yg)("p",null,"And voil\xe0, we've made our first animation using Reanimated! You can see how it works in its full glory in a preview below:"),(0,o.yg)(w,{src:g,component:(0,o.yg)(c,{mdxType:"FirstAnimation"}),mdxType:"InteractiveExample"}),(0,o.yg)("h2",{id:"summary"},"Summary"),(0,o.yg)("p",null,"In this section, we gained a firm grasp on the Reanimated fundamentals. We learned about ",(0,o.yg)("inlineCode",{parentName:"p"},"Animated")," components, shared values and how to use them to create a simple animation. To sum up:"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("inlineCode",{parentName:"li"},"Animated")," components are used to define animatable elements."),(0,o.yg)("li",{parentName:"ul"},"Shared values are a driving factor of all animations and we define them using a ",(0,o.yg)("inlineCode",{parentName:"li"},"useSharedValue")," hook."),(0,o.yg)("li",{parentName:"ul"},"Shared values are always accessed and modified by their ",(0,o.yg)("inlineCode",{parentName:"li"},".value")," property (eg. ",(0,o.yg)("inlineCode",{parentName:"li"},"sv.value = 100;"),")."),(0,o.yg)("li",{parentName:"ul"},"To create smooth animations modify shared values using animation functions like ",(0,o.yg)("inlineCode",{parentName:"li"},"withTiming"))),(0,o.yg)("h2",{id:"whats-next"},"What's next?"),(0,o.yg)("p",null,"In ",(0,o.yg)("a",{parentName:"p",href:"/docs/fundamentals/animating-styles-and-props"},"the next section"),", we will learn more about how to animate styles and props using ",(0,o.yg)("inlineCode",{parentName:"p"},"useAnimatedStyle")," and ",(0,o.yg)("inlineCode",{parentName:"p"},"useAnimatedProps")," hooks."))}A.isMDXComponent=!0},27979:(e,n,t)=>{t.d(n,{e:()=>o});var a=t(49253);function i(e,n,t){if(n.skipAnimation)return 0;const{stiffness:a,dampingRatio:i,restSpeedThreshold:o,duration:r}=n;return function(e){let{min:n,max:t,func:a,maxIterations:i=20}=e,o=i,r=(t+n)/2;for(;Math.abs(a(r))>5e-5&&o>0;)o-=1,a(r)<0?n=r:t=r,r=(n+t)/2;return r}({min:0,max:100,func:n=>{const s=(n*t*t+a*e*e)/(Math.exp(1-.5*i)*a);return-2*n/(2*i*Math.sqrt(a*n))*1e3*Math.log(.01*o/s)-r}})}const o=(e,n,t)=>(0,a.yK)(e,(()=>{const o={...{damping:10,mass:1,stiffness:100,overshootClamping:!1,restDisplacementThreshold:.01,restSpeedThreshold:2,velocity:0,duration:2e3,dampingRatio:.5,reduceMotion:void 0,clamp:void 0},...n,useDuration:!!(null!=n&&n.duration||null!=n&&n.dampingRatio),skipAnimation:!1};return o.skipAnimation=!function(e){var n,t;let a="";return["stiffness","damping","dampingRatio","restDisplacementThreshold","restSpeedThreshold","mass"].forEach((n=>{const t=e[n];t<=0&&(a+=`, ${n} must be grater than zero but got ${t}`)})),e.duration<0&&(a+=`, duration can't be negative, got ${e.duration}`),null!==(n=e.clamp)&&void 0!==n&&n.min&&null!==(t=e.clamp)&&void 0!==t&&t.max&&e.clamp.min>e.clamp.max&&(a+=`, clamp.min should be lower than clamp.max, got clamp: {min: ${e.clamp.min}, max: ${e.clamp.max}} `),""!==a&&console.warn("[Reanimated] Invalid spring config"+a),""===a}(o),0===o.duration&&(o.skipAnimation=!0),{onFrame:function(e,n){const{toValue:t,startTimestamp:a,current:i}=e,r=n-a;if(o.useDuration&&r>=o.duration)return e.current=t,e.lastTimestamp=0,!0;if(o.skipAnimation)return e.current=t,e.lastTimestamp=0,!0;const{lastTimestamp:s,velocity:l}=e,u=Math.min(n-s,64);e.lastTimestamp=n;const d=u/1e3,m=-l,c=t-i,{zeta:p,omega0:g,omega1:h}=e,{position:y,velocity:f}=p<1?function(e,n){const{toValue:t,current:a,velocity:i}=e,{zeta:o,t:r,omega0:s,omega1:l}=n,u=-i,d=t-a,m=Math.sin(l*r),c=Math.cos(l*r),p=Math.exp(-o*s*r),g=p*(m*((u+o*s*d)/l)+d*c);return{position:t-g,velocity:o*s*g-p*(c*(u+o*s*d)-l*d*m)}}(e,{zeta:p,v0:m,x0:c,omega0:g,omega1:h,t:d}):function(e,n){const{toValue:t}=e,{v0:a,x0:i,omega0:o,t:r}=n,s=Math.exp(-o*r);return{position:t-s*(i+(a+o*i)*r),velocity:s*(a*(r*o-1)+r*i*o*o)}}(e,{v0:m,x0:c,omega0:g,t:d});e.current=y,e.velocity=f;const{isOvershooting:v,isVelocity:b,isDisplacement:w}=function(e,n){const{toValue:t,velocity:a,startValue:i,current:o}=e;return{isOvershooting:!!n.overshootClamping&&(o>t&&i<t||o<t&&i>t),isVelocity:Math.abs(a)<n.restSpeedThreshold,isDisplacement:Math.abs(t-o)<n.restDisplacementThreshold}}(e,o),N=v||b&&w;return!(o.useDuration||!N)&&(e.velocity=0,e.current=t,e.lastTimestamp=0,!0)},onStart:function(e,n,t,a){e.current=n,e.startValue=n;let r=o.mass;const s=function(e,n){return(null==e?void 0:e.lastTimestamp)&&(null==e?void 0:e.startTimestamp)&&(null==e?void 0:e.toValue)===n.toValue&&(null==e?void 0:e.duration)===n.duration&&(null==e?void 0:e.dampingRatio)===n.dampingRatio}(a,e),l=o.duration,u=s?null==a?void 0:a.startValue:Number(e.toValue)-n;if(e.velocity=a?(s?null==a?void 0:a.velocity:(null==a?void 0:a.velocity)+o.velocity)||0:o.velocity||0,s)e.zeta=(null==a?void 0:a.zeta)||0,e.omega0=(null==a?void 0:a.omega0)||0,e.omega1=(null==a?void 0:a.omega1)||0;else{if(o.useDuration){const n=s?l-(((null==a?void 0:a.lastTimestamp)||0)-((null==a?void 0:a.startTimestamp)||0)):l;o.duration=n,r=i(u,o,e.velocity)}const{zeta:n,omega0:t,omega1:d}=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,n=arguments.length>1?arguments[1]:void 0;if(n.skipAnimation)return{zeta:0,omega0:0,omega1:0};if(n.useDuration){const{stiffness:t,dampingRatio:a}=n,i=Math.sqrt(t/e);return{zeta:a,omega0:i,omega1:i*Math.sqrt(1-a**2)}}{const{damping:e,mass:t,stiffness:a}=n,i=e/(2*Math.sqrt(a*t)),o=Math.sqrt(a/t);return{zeta:i,omega0:o,omega1:o*Math.sqrt(1-i**2)}}}(r,o);e.zeta=n,e.omega0=t,e.omega1=d,void 0!==o.clamp&&(e.zeta=function(e,n){const{zeta:t,toValue:a,startValue:i}=e,o=Number(a);if(o===i)return t;const[r,s]=o-i>0?[n.min,n.max]:[n.max,n.min],l=void 0!==s?Math.abs((s-o)/(o-i)):void 0,u=void 0!==r?Math.abs((r-o)/(o-i)):void 0,d=[void 0!==l?Math.abs(Math.log(l)/Math.PI):void 0,void 0!==u?Math.abs(Math.log(u)/(2*Math.PI)):void 0].filter((e=>void 0!==e));return Math.max(...d,t)}(e,o.clamp))}e.lastTimestamp=(null==a?void 0:a.lastTimestamp)||t,e.startTimestamp=s&&(null==a?void 0:a.startTimestamp)||t},toValue:e,velocity:o.velocity||0,current:e,startValue:0,callback:t,lastTimestamp:0,startTimestamp:0,zeta:0,omega0:0,omega1:0,reduceMotion:(0,a.AR)(o.reduceMotion)}}))},92220:(e,n,t)=>{t.d(n,{X:()=>i});var a=t(9176);const i=(0,t(72089).b)(a.A)},80101:(e,n,t)=>{t.d(n,{A:()=>v});var a=t(96540),i=t(91691),o=t(58168),r=t(98587),s=t(11804),l=t(17069),u=t(9176),d=["activeOpacity","delayPressIn","delayPressOut","delayLongPress","disabled","focusable","onLongPress","onPress","onPressIn","onPressOut","rejectResponderTermination","style"];function m(e,n){var t=e.activeOpacity,i=e.delayPressIn,m=e.delayPressOut,p=e.delayLongPress,g=e.disabled,h=e.focusable,y=e.onLongPress,f=e.onPress,v=e.onPressIn,b=e.onPressOut,w=e.rejectResponderTermination,N=e.style,C=(0,r.A)(e,d),x=(0,a.useRef)(null),A=(0,s.A)(n,x),P=(0,a.useState)("0s"),k=P[0],V=P[1],S=(0,a.useState)(null),T=S[0],O=S[1],M=(0,a.useCallback)(((e,n)=>{O(e),V(n?n/1e3+"s":"0s")}),[O,V]),D=(0,a.useCallback)((e=>{M(null!=t?t:.2,e)}),[t,M]),R=(0,a.useCallback)((e=>{M(null,e)}),[M]),j=(0,a.useMemo)((()=>({cancelable:!w,disabled:g,delayLongPress:p,delayPressStart:i,delayPressEnd:m,onLongPress:y,onPress:f,onPressStart(e){var n=null!=e.dispatchConfig?"onResponderGrant"===e.dispatchConfig.registrationName:"keydown"===e.type;D(n?0:150),null!=v&&v(e)},onPressEnd(e){R(250),null!=b&&b(e)}})),[p,i,m,g,y,f,v,b,w,D,R]),I=(0,l.A)(x,j);return a.createElement(u.A,(0,o.A)({},C,I,{accessibilityDisabled:g,focusable:!g&&!1!==h,pointerEvents:g?"none":void 0,ref:A,style:[c.root,!g&&c.actionable,N,null!=T&&{opacity:T},{transitionDuration:k}]}))}var c=i.A.create({root:{transitionProperty:"opacity",transitionDuration:"0.15s",userSelect:"none"},actionable:{cursor:"pointer",touchAction:"manipulation"}}),p=a.memo(a.forwardRef(m));p.displayName="TouchableOpacity";const g=p;var h=t(78506),y=a.forwardRef(((e,n)=>{var t=e.accessibilityLabel,i=e.color,o=e.disabled,r=e.onPress,s=e.testID,l=e.title;return a.createElement(g,{accessibilityLabel:t,accessibilityRole:"button",disabled:o,focusable:!o,onPress:r,ref:n,style:[f.button,i&&{backgroundColor:i},o&&f.buttonDisabled],testID:s},a.createElement(h.A,{style:[f.text,o&&f.textDisabled]},l))}));y.displayName="Button";var f=i.A.create({button:{backgroundColor:"#2196F3",borderRadius:2},text:{color:"#fff",fontWeight:"500",padding:8,textAlign:"center",textTransform:"uppercase"},buttonDisabled:{backgroundColor:"#dfdfdf"},textDisabled:{color:"#a1a1a1"}});const v=y}}]);