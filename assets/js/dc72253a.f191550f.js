"use strict";(self.webpackChunkreact_native_reanimated_docs=self.webpackChunkreact_native_reanimated_docs||[]).push([[2711],{19249:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>x,contentTitle:()=>N,default:()=>A,frontMatter:()=>y,metadata:()=>w,toc:()=>C});var a=n(83117),r=n(67294),i=n(3905),o=n(67177),s=n(24404),l=n(14779),u=n(72862),d=n(82334),c=n(10758),m=n(6328),p=n(26503),f=n(12717),h=n(49638);const k={code:"function anonymous(){const{measure,animatedRef,runOnJS,setText}=this.__closure;const measurement=measure(animatedRef);if(measurement===null){return;}runOnJS(setText)(Math.floor(measurement.width));}"};function g(){const e=(0,d.m)(),t=(0,c.y)(100),[n,a]=r.useState(t.value);return r.createElement(o.Z,{style:b.container},r.createElement(h.n,{ref:e,style:{...b.box,width:t}}),r.createElement(s.Z,{style:b.label},"width: ",n),r.createElement(l.Z,{onPress:()=>{t.value=(0,m.j)(t.value+50,{},function(){const t=function(){const t=(0,p.L)(e);null!==t&&(0,f.tC)(a)(Math.floor(t.width))};return t.__closure={measure:p.L,animatedRef:e,runOnJS:f.tC,setText:a},t.__initData=k,t.__workletHash=3140290373826,t}())},title:"Click me"}))}const b=u.Z.create({container:{flex:1,alignItems:"center"},box:{height:100,backgroundColor:"#b58df1",borderRadius:20},label:{fontSize:24,marginVertical:16,color:"#b58df1"}}),v="import React from 'react';\nimport { Button, StyleSheet, View, Text } from 'react-native';\nimport Animated, {\n  measure,\n  runOnJS,\n  useAnimatedRef,\n  useSharedValue,\n  withTiming,\n} from 'react-native-reanimated';\n\nexport default function App() {\n  const animatedRef = useAnimatedRef();\n  const width = useSharedValue(100);\n  const [text, setText] = React.useState(width.value);\n\n  const handlePress = () => {\n    width.value = withTiming(width.value + 50, {}, () => {\n      // highlight-next-line\n      const measurement = measure(animatedRef);\n      if (measurement === null) {\n        return;\n      }\n\n      runOnJS(setText)(Math.floor(measurement.width));\n    });\n  };\n\n  return (\n    <View style={styles.container}>\n      <Animated.View ref={animatedRef} style={{ ...styles.box, width }} />\n      <Text style={styles.label}>width: {text}</Text>\n      <Button onPress={handlePress} title=\"Click me\" />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n  },\n  box: {\n    height: 100,\n    backgroundColor: '#b58df1',\n    borderRadius: 20,\n  },\n  label: {\n    fontSize: 24,\n    marginVertical: 16,\n    color: '#b58df1',\n  },\n});\n",y={sidebar_position:1},N="measure",w={unversionedId:"advanced/measure",id:"advanced/measure",title:"measure",description:"measure lets you synchronously get the dimensions and position of a view on the screen, all on the UI thread.",source:"@site/docs/advanced/measure.mdx",sourceDirName:"advanced",slug:"/advanced/measure",permalink:"/react-native-reanimated/docs/advanced/measure",draft:!1,editUrl:"https://github.com/software-mansion/react-native-reanimated/tree/main/docs/docs/advanced/measure.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Advanced APIs",permalink:"/react-native-reanimated/docs/category/advanced-apis"},next:{title:"useAnimatedReaction",permalink:"/react-native-reanimated/docs/advanced/useAnimatedReaction"}},x={},C=[{value:"Reference",id:"reference",level:2},{value:"Arguments",id:"arguments",level:3},{value:"<code>animatedRef</code>",id:"animatedref",level:4},{value:"Returns",id:"returns",level:3},{value:"Example",id:"example",level:2},{value:"Remarks",id:"remarks",level:2},{value:"Platform compatibility",id:"platform-compatibility",level:2}],R=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,i.kt)("div",t)},P=R("InteractiveExample"),T=R("Indent"),S={toc:C},M="wrapper";function A(e){let{components:t,...n}=e;return(0,i.kt)(M,(0,a.Z)({},S,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"measure"},"measure"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"measure")," lets you synchronously get the dimensions and position of a view on the screen, all on the ",(0,i.kt)("a",{parentName:"p",href:"/docs/fundamentals/glossary#ui-thread"},"UI thread"),"."),(0,i.kt)("h2",{id:"reference"},"Reference"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},"import { measure } from 'react-native-reanimated';\n\nfunction App() {\n  const animatedRef = useAnimatedRef();\n\n  const handlePress = () => {\n    runOnUI(() => {\n      // highlight-next-line\n      const measurement = measure(animatedRef);\n      if (measurement === null) {\n        return;\n      }\n      // ...\n    })();\n  };\n\n  return <Animated.View ref={animatedRef} />;\n}\n")),(0,i.kt)("details",null,(0,i.kt)("summary",null,"Type definitions"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"interface MeasuredDimensions {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n  pageX: number;\n  pageY: number;\n}\n\nfunction measure<T extends Component>(\n  animatedRef: AnimatedRef<T>\n): MeasuredDimensions | null;\n"))),(0,i.kt)("h3",{id:"arguments"},"Arguments"),(0,i.kt)("h4",{id:"animatedref"},(0,i.kt)("inlineCode",{parentName:"h4"},"animatedRef")),(0,i.kt)("p",null,"An ",(0,i.kt)("a",{parentName:"p",href:"/docs/core/useAnimatedRef#returns"},"animated ref")," connected to the component you'd want to get the measurements from. The animated ref has to be passed either to an ",(0,i.kt)("a",{parentName:"p",href:"/docs/fundamentals/glossary#animated-component"},"Animated component")," or a React Native built-in component."),(0,i.kt)("h3",{id:"returns"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"measure")," returns an object containing these fields:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"x")," a number representing X coordinate relative to the parent component,"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"y")," a number representing Y coordinate relative to the parent component,"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"width")," a number representing the width of the component,"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"height")," a number representing the height of the component,"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"pageX")," a number representing X coordinate relative to the screen,"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"pageY")," a number representing Y coordinate relative to the screen,")),(0,i.kt)("p",null,"or returns ",(0,i.kt)("inlineCode",{parentName:"p"},"null")," when the measurement couldn't be performed."),(0,i.kt)("h2",{id:"example"},"Example"),(0,i.kt)(P,{src:v,component:(0,i.kt)(g,{mdxType:"MeasureBasic"}),mdxType:"InteractiveExample"}),(0,i.kt)("h2",{id:"remarks"},"Remarks"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"measure")," is implemented only on the ",(0,i.kt)("a",{parentName:"p",href:"/docs/fundamentals/glossary#ui-thread"},"UI thread"),". When using ",(0,i.kt)("inlineCode",{parentName:"p"},"measure")," inside ",(0,i.kt)("a",{parentName:"p",href:"https://react.dev/learn/responding-to-events#adding-event-handlers"},"event handlers"),", it has to be wrapped with the ",(0,i.kt)("a",{parentName:"p",href:"/docs/threading/runOnUI"},(0,i.kt)("inlineCode",{parentName:"a"},"runOnUI"))," function.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"The ",(0,i.kt)("inlineCode",{parentName:"p"},"useAnimatedStyle")," function is first evaluated on the ",(0,i.kt)("a",{parentName:"p",href:"/docs/fundamentals/glossary#javascript-thread"},"JavaScript thread")," just before the views are attached to the native side. For this reason, to safely use the measure within ",(0,i.kt)("inlineCode",{parentName:"p"},"useAnimatedStyle"),", a condition similar to the one below must be added to the code:"))),(0,i.kt)(T,{mdxType:"Indent"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},"function App() {\n  const animatedStyles = useAnimatedStyle(() => {\n    // highlight-next-line\n    if (_WORKLET) {\n      // safely use measure\n      const measurement = measure(animatedRef);\n    }\n  });\n}\n")),(0,i.kt)("p",null,"Consecutive runs of ",(0,i.kt)("inlineCode",{parentName:"p"},"useAnimatedStyle")," are executed on the UI thread.")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"When you only need the dimensions of the component and won't use the measurements during animation, consider using the ",(0,i.kt)("a",{parentName:"p",href:"https://reactnative.dev/docs/view#onlayout"},(0,i.kt)("inlineCode",{parentName:"a"},"onLayout"))," property instead.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Sometimes, ",(0,i.kt)("inlineCode",{parentName:"p"},"measure")," returns ",(0,i.kt)("inlineCode",{parentName:"p"},"null")," (e.g., when the ",(0,i.kt)("inlineCode",{parentName:"p"},"ref")," hasn't yet attached to the view). It's best to add a ",(0,i.kt)("inlineCode",{parentName:"p"},"null")," check after the measurement for added safety."))),(0,i.kt)(T,{mdxType:"Indent"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},"const animatedRef = useAnimatedRef();\n\nconst handlePress = () => {\n  runOnUI(() => {\n    const measurement = measure(animatedRef);\n\n    // highlight-start\n    if (measurement === null) {\n      return;\n    }\n    // highlight-end\n    // ...\n  })();\n};\n"))),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"measure")," can be used only on rendered components. For instance, attempting to ",(0,i.kt)("inlineCode",{parentName:"p"},"measure")," off-screen items in a ",(0,i.kt)("inlineCode",{parentName:"p"},"FlatList")," will return a ",(0,i.kt)("inlineCode",{parentName:"p"},"null")," value.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"measure")," isn't available with the Remote JS Debugger. We highly recommend using Chrome DevTools (also known as ",(0,i.kt)("inlineCode",{parentName:"p"},"chrome://inspect"),") for debugging React Native apps."))),(0,i.kt)("h2",{id:"platform-compatibility"},"Platform compatibility"),(0,i.kt)("div",{className:"platform-compatibility"},(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Android"),(0,i.kt)("th",{parentName:"tr",align:null},"iOS"),(0,i.kt)("th",{parentName:"tr",align:null},"Web"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"\u2705"),(0,i.kt)("td",{parentName:"tr",align:null},"\u2705"),(0,i.kt)("td",{parentName:"tr",align:null},"\u2705"))))))}A.isMDXComponent=!0},87827:(e,t,n)=>{function a(e,t,n,a){const r=4,i=.001,o=1e-7,s=10,l=11,u=1/(l-1);function d(e,t){return 1-3*t+3*e}function c(e,t){return 3*t-6*e}function m(e){return 3*e}function p(e,t,n){return((d(t,n)*e+c(t,n))*e+m(t))*e}function f(e,t,n){return 3*d(t,n)*e*e+2*c(t,n)*e+m(t)}if(!(e>=0&&e<=1&&n>=0&&n<=1))throw new Error("[Reanimated] Bezier x values must be in [0, 1] range.");if(e===t&&n===a)return function(e){return e};const h=new Array(l);for(let g=0;g<l;++g)h[g]=p(g*u,e,n);function k(t){let a=0,d=1;const c=l-1;for(;d!==c&&h[d]<=t;++d)a+=u;--d;const m=a+(t-h[d])/(h[d+1]-h[d])*u,k=f(m,e,n);return k>=i?function(e,t,n,a){for(let i=0;i<r;++i){const r=f(t,n,a);if(0===r)return t;t-=(p(t,n,a)-e)/r}return t}(t,m,e,n):0===k?m:function(e,t,n,a,r){let i,l,u=0;do{l=t+(n-t)/2,i=p(l,a,r)-e,i>0?n=l:t=l}while(Math.abs(i)>o&&++u<s);return l}(t,a,a+u,e,n)}return function(r){return e===t&&n===a?r:0===r?0:1===r?1:p(k(r),t,a)}}n.d(t,{o:()=>r});const r={linear:function(e){return e},ease:function(e){return a(.42,0,1,1)(e)},quad:function(e){return e*e},cubic:function(e){return e*e*e},poly:function(e){return t=>Math.pow(t,e)},sin:function(e){return 1-Math.cos(e*Math.PI/2)},circle:function(e){return 1-Math.sqrt(1-e*e)},exp:function(e){return Math.pow(2,10*(e-1))},elastic:function(){const e=(arguments.length>0&&void 0!==arguments[0]?arguments[0]:1)*Math.PI;return t=>1-Math.pow(Math.cos(t*Math.PI/2),3)*Math.cos(t*e)},back:function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1.70158;return t=>t*t*((e+1)*t-e)},bounce:function(e){if(e<1/2.75)return 7.5625*e*e;if(e<2/2.75){const t=e-1.5/2.75;return 7.5625*t*t+.75}if(e<2.5/2.75){const t=e-2.25/2.75;return 7.5625*t*t+.9375}const t=e-2.625/2.75;return 7.5625*t*t+.984375},bezier:function(e,t,n,r){return{factory:()=>a(e,t,n,r)}},bezierFn:function(e,t,n,r){return a(e,t,n,r)},steps:function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:10,t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];return n=>{const a=Math.min(Math.max(n,0),1)*e;return t?Math.ceil(a)/e:Math.floor(a)/e}},in:function(e){return e},out:function(e){return t=>1-e(1-t)},inOut:function(e){return t=>t<.5?e(2*t)/2:1-e(2*(1-t))/2}}},6328:(e,t,n)=>{n.d(t,{j:()=>i});var a=n(87827),r=n(76933);const i=function(e,t,n){return(0,r.oF)(e,(()=>{const i={duration:300,easing:a.o.inOut(a.o.quad)};return t&&Object.keys(t).forEach((e=>i[e]=t[e])),{type:"timing",onFrame:function(e,t){const{toValue:n,startTime:a,startValue:r}=e,o=t-a;if(o>=i.duration)return e.startTime=0,e.current=n,!0;const s=e.easing(o/i.duration);return e.current=r+(n-r)*s,!1},onStart:function(t,n,a,r){r&&"timing"===r.type&&r.toValue===e&&r.startTime?(t.startTime=r.startTime,t.startValue=r.startValue):(t.startTime=a,t.startValue=n),t.current=n,"object"==typeof i.easing?t.easing=i.easing.factory():t.easing=i.easing},progress:0,toValue:e,startValue:0,startTime:0,easing:()=>0,current:e,callback:n,reduceMotion:(0,r.uh)(null==t?void 0:t.reduceMotion)}}))}},49638:(e,t,n)=>{n.d(t,{n:()=>r});var a=n(67177);const r=(0,n(33705).F)(a.Z)},82334:(e,t,n)=>{n.d(t,{m:()=>c});var a=n(67294),r=n(10758),i=n(7737),o=n(86425),s=n(82747),l=n(22805);const u=(0,n(83442).aw)();const d=u?i.b:s.Z;function c(){const e=(0,r.y)(-1),t=(0,r.y)(null),n=(0,a.useRef)();if(!n.current){const a=n=>{var r;n&&(e.value=d(function(e){return u&&e.getNativeScrollRef?e.getNativeScrollRef():!u&&e.getScrollableNode?e.getScrollableNode():e}(n)),a.current=n,"ios"!==l.Z.OS||u||(t.value=(null==n||null===(r=n.viewConfig)||void 0===r?void 0:r.uiViewClassName)||"RCTView"));return e.value};a.current=null;const r=(0,o.wH)({__init:()=>{const n=()=>e.value;return n.viewName=t,n}});(0,o.K_)(a,r),n.current=a}return n.current}},26503:(e,t,n)=>{function a(e){const t=e();if(-1===t)return console.warn(`[Reanimated] The view with tag ${t} is not a valid argument for measure(). This may be because the view is not currently rendered, which may not be a bug (e.g. an off-screen FlatList item).`),null;const n=t.getBoundingClientRect();return{width:t.offsetWidth,height:t.offsetHeight,x:t.offsetLeft,y:t.offsetTop,pageX:n.left,pageY:n.top}}n.d(t,{L:()=>a})},14779:(e,t,n)=>{n.d(t,{Z:()=>b});var a=n(67294),r=n(72862),i=n(83117),o=n(80102),s=n(16528),l=n(94119),u=n(67177),d=["activeOpacity","delayPressIn","delayPressOut","delayLongPress","disabled","focusable","onLongPress","onPress","onPressIn","onPressOut","rejectResponderTermination","style"];function c(e,t){var n=e.activeOpacity,r=e.delayPressIn,c=e.delayPressOut,p=e.delayLongPress,f=e.disabled,h=e.focusable,k=e.onLongPress,g=e.onPress,b=e.onPressIn,v=e.onPressOut,y=e.rejectResponderTermination,N=e.style,w=(0,o.Z)(e,d),x=(0,a.useRef)(null),C=(0,s.Z)(t,x),R=(0,a.useState)("0s"),P=R[0],T=R[1],S=(0,a.useState)(null),M=S[0],A=S[1],I=(0,a.useCallback)(((e,t)=>{A(e),T(t?t/1e3+"s":"0s")}),[A,T]),O=(0,a.useCallback)((e=>{I(null!=n?n:.2,e)}),[n,I]),_=(0,a.useCallback)((e=>{I(null,e)}),[I]),V=(0,a.useMemo)((()=>({cancelable:!y,disabled:f,delayLongPress:p,delayPressStart:r,delayPressEnd:c,onLongPress:k,onPress:g,onPressStart(e){var t=null!=e.dispatchConfig?"onResponderGrant"===e.dispatchConfig.registrationName:"keydown"===e.type;O(t?0:150),null!=b&&b(e)},onPressEnd(e){_(250),null!=v&&v(e)}})),[p,r,c,f,k,g,b,v,y,O,_]),D=(0,l.Z)(x,V);return a.createElement(u.Z,(0,i.Z)({},w,D,{accessibilityDisabled:f,focusable:!f&&!1!==h,pointerEvents:f?"none":void 0,ref:C,style:[m.root,!f&&m.actionable,N,null!=M&&{opacity:M},{transitionDuration:P}]}))}var m=r.Z.create({root:{transitionProperty:"opacity",transitionDuration:"0.15s",userSelect:"none"},actionable:{cursor:"pointer",touchAction:"manipulation"}}),p=a.memo(a.forwardRef(c));p.displayName="TouchableOpacity";const f=p;var h=n(24404),k=a.forwardRef(((e,t)=>{var n=e.accessibilityLabel,r=e.color,i=e.disabled,o=e.onPress,s=e.testID,l=e.title;return a.createElement(f,{accessibilityLabel:n,accessibilityRole:"button",disabled:i,focusable:!i,onPress:o,ref:t,style:[g.button,r&&{backgroundColor:r},i&&g.buttonDisabled],testID:s},a.createElement(h.Z,{style:[g.text,i&&g.textDisabled]},l))}));k.displayName="Button";var g=r.Z.create({button:{backgroundColor:"#2196F3",borderRadius:2},text:{color:"#fff",fontWeight:"500",padding:8,textAlign:"center",textTransform:"uppercase"},buttonDisabled:{backgroundColor:"#dfdfdf"},textDisabled:{color:"#a1a1a1"}});const b=k}}]);